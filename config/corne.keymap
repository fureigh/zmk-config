/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * 
 * This is Fureigh adding a line just to prompt a rebuild.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&none  &kp Q        &kp W  &kp E             &kp R     &kp T             &kp Y                     &kp U        &kp I            &kp O    &kp P                          &none
&none  &kp A        &kp S  &kp D             &kp F     &kp G             &kp H                     &kp J        &kp K            &kp L    &tp LS(LC(LALT)) SINGLE_QUOTE  &none
&none  &tp LSHFT Z  &kp X  &kp C             &kp V     &kp B             &kp N                     &kp M        &kp COMMA        &kp DOT  &tp RSHIFT FSLH                &none
                           &tp LCTRL ESCAPE  &kp LGUI  &tp LALT ENTER    &tp LC(LS(LA(LGUI))) TAB  &lt 1 SPACE  &lt 2 BACKSPACE
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&none  &kp NUMBER_1    &kp NUMBER_2       &kp NUMBER_3       &kp NUMBER_4   &kp NUMBER_5    &kp NUMBER_6                &kp NUMBER_7  &kp NUMBER_8      &kp NUMBER_9       &kp NUMBER_0          &none
&none  &kp GRAVE       &kp HOME           &kp PG_UP          &kp PAGE_DOWN  &kp END         &kp LEFT                    &kp DOWN      &kp UP            &kp RIGHT          &kp SEMICOLON         &none
&none  &kp LEFT_SHIFT  &kp LG(LC(SPACE))  &kp LS(LG(SPACE))  &none          &kp DELETE      &kp MINUS                   &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &tp RSHIFT BACKSLASH  &none
                                          &kp LCTRL          &kp LGUI       &tp LALT RET    &tp LC(LS(LA(LGUI))) SPACE  &trans        &trans
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&trans  &kp F1      &kp F2   &kp F3      &kp F4             &kp F5        &kp F6        &kp F7        &kp F8        &kp F9                &kp F10               &trans
&trans  &kp F11     &kp F12  &kp C_PREV  &kp C_NEXT         &kp C_PP      &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans
&none   &kp LSHIFT  &none    &none       &kp LS(LG(SPACE))  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3          &bt BT_SEL 4          &trans
                             &kp LCTRL   &kp LEFT_GUI       &kp LALT      &kp DELETE    &trans        &trans
            >;
        };
    };
};
